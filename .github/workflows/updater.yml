
name: agent Updater
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: Log level
        required: true
        default: warning
        type: choice
        options:
          - info
          - warning
          - debug
jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: change dir
      run: cd ..
        
    - name: Get Bumper File
      run: curl -o /bump_version.py ${{ secrets.BUMP_URL }}

    - name: Run Bump script
      run: python /bump_version.py
  
    - name: Remove Bump Script
      run: rm -r /bump_version.py

    - name: Bump version
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add setup.py real-useragent/__init__.py
        git add .
        git commit -m 'version Update Mode'
        git push origin main

    - name: Build Real User Agent Package
      run: |
        python setup.py sdist bdist_wheel


    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*


    - uses: actions/checkout@v2
    - name: Download Update DB
      id: db_updater
      run: cd real-usergent&&python3 get_agent.py ${{ secrets.DB_URL }}
      
    - name: Get Compiler
      id: compiler_agent
      run: python3 get_compile.py

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "v${{ env.NEW_VERSION }}"
        name: "Release v${{ env.NEW_VERSION }}"
        body: |
          ## CryptoFuzz New Release `${{ env.NEW_VERSION }}`

          > [!NOTE] 
          > New version of cryptoFuzz has been released `v${{ env.NEW_VERSION }}`, Check the latest features and updates in this release.
          
          install and use CryptoFuzz with `pip` and `pip3` follow command :
          
          ### Windows
          
          ```bash
          pip install real-useragent
          # or 
          pip install real-useragent==${{ env.NEW_VERSION }}
          ```
          ##### upgrade : `pip install real-useragent --upgrade`

          ---
          
          ### Linux & MacOS

          ```bash
          pip3 install real-useragent
          # or 
          pip3 install real-useragent==${{ env.NEW_VERSION }}
          ```

          ##### upgrade : `pip3 install real-useragent --upgrade`

          ---

          - [Documentation](https://real-useragent.readthedocs.io/)
          - [PyPi Package](https://pypi.org/project/real-useragent/${{ env.NEW_VERSION }}/)
          - [PyPi History](https://pypi.org/project/real-useragent/${{ env.NEW_VERSION }}/#history)
          - [Description Package](https://pypi.org/project/real-useragent/${{ env.NEW_VERSION }}/#description)
          - [Use Git Clone](https://github.com/UserAgenter/real-useragent#git)
          
          Programmer and Owner : @Pymmdrza
          
        files: |
          dist/real-useragent-${{ env.NEW_VERSION }}.tar.gz
          dist/real-useragent-${{ env.NEW_VERSION }}-py3-none-any.whl
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
